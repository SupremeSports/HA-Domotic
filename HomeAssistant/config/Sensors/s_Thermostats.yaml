####################################################
# THERMOSTATS                                      #
####################################################

  - platform: mqtt
    name: "Living Room Temp"
    icon: mdi:thermometer
    unit_of_measurement: '°C'
    state_topic: "Home/Living/Therm/Json"
    availability:
      - topic: "Home/Living/Therm/LWT"
    qos: 0
    value_template: "{{ value_json.room_temp }}"
    json_attributes_topic: "Home/Living/Therm/Json"
    
  - platform: mqtt
    name: "Living Room Hum"
    icon: mdi:water-percent
    unit_of_measurement: '%'
    state_topic: "Home/Living/Therm/Json"
    availability:
      - topic: "Home/Living/Therm/LWT"
    qos: 0
    value_template: "{{ value_json.room_hum }}"
    
  - platform: mqtt
    name: "Garage Front Temp Raw"
    icon: mdi:thermometer
    unit_of_measurement: '°C'
    state_topic: "Garage/Front/Therm/Json"
    availability:
      - topic: "Garage/Front/Therm/LWT"
    qos: 0
    value_template: >
      {% set room = value_json.room_temp %}
      
      {% if room|string == '---' or room|string == 'unknown' or room|float == -99.9 or room|float == -1 %}
        {{ Unknown }}
      {% else %}
        {{ room | round(1) }}
      {% endif %}
    json_attributes_topic: "Garage/Front/Therm/Json"
    
  - platform: mqtt
    name: "Garage Front Hum"
    icon: mdi:water-percent
    unit_of_measurement: '%'
    state_topic: "Garage/Front/Therm/Json"
    availability:
      - topic: "Garage/Front/Therm/LWT"
    qos: 0
    value_template: "{{ value_json.room_hum }}"
    
  - platform: mqtt
    name: "Garage Rear Temp Raw"
    icon: mdi:thermometer
    unit_of_measurement: '°C'
    state_topic: "Garage/Rear/Therm/Json"
    availability:
      - topic: "Garage/Rear/Therm/LWT"
    qos: 0
    value_template: >
      {% set room = value_json.room_temp %}
      
      {% if room|string == '---' or room|string == 'unknown' or room|float == -99.9 or room|float == -1 %}
        {{ Unknown }}
      {% else %}
        {{ room | round(1) }}
      {% endif %}
    json_attributes_topic: "Garage/Rear/Therm/Json"
    
  - platform: mqtt
    name: "Garage Rear Hum"
    icon: mdi:water-percent
    unit_of_measurement: '%'
    state_topic: "Garage/Rear/Therm/Json"
    availability:
      - topic: "Garage/Rear/Therm/LWT"
    qos: 0
    value_template: "{{ value_json.room_hum }}"
    
  - platform: template
    sensors:
      garage_front_temp:
        friendly_name: "Garage Front Temp"
        unit_of_measurement: '°C'
        value_template: >
          {% set room = states.sensor.garage_front_temp_raw.state %}
          {% set heartbeat = ((as_timestamp(now()) - as_timestamp(states.sensor.garage_safety_heartbeat.last_changed))) <= 15 %}
          {% set ok = false %}
          
          {% set forceSafety = true %}
          
          {% if room|string == '---' or room|string == 'unknown' or room|string == 'unavailable' or room|float == -99.9 or room|float == -1 or forceSafety %}
            {% if heartbeat %}
              {% set room = states.sensor.garage_safety_front_temperature.state|float %}
              {% set ok = true %}
            {% endif %}
          {% else %}
            {% set ok = true %}
          {% endif %}
          
          {% if ok %}
            {{ room | round(1) }}
          {% else %}
            {{ "Unknown" }}
          {% endif %}
        icon_template: >
          mdi:thermometer
        availability_template: >
          {{ not is_state('binary_sensor.garagefrontheater_error', 'unavailable') or not is_state('sensor.garage_front_temp_raw', 'unavailable') }}
        # attribute_templates:
          # heartbeat: "{{ states.sensor.garage_safety_heartbeat.state }}"
          # f_temp: "{{ states.sensor.garage_safety_front_temperature.state }}"
          # f_relay: "{{ states.binary_sensor.garage_front_safety_active.state == 'on' }}"
          # f_aux: "{{ states.binary_sensor.garagefrontheater_ac.state == 'on' }}"
          # f_coil: "{{ states.switch.garage_front_heater.state == 'on' }}"
          # r_temp: "{{ states.sensor.garage_safety_rear_temperature.state }}"
          # r_aux: "{{ states.binary_sensor.garagerearheater_ac.state == 'on' }}"
          # r_relay: "{{ states.binary_sensor.garage_rear_safety_active.state == 'on' }}"
          # r_coil: "{{ states.switch.garage_rear_heater.state == 'on' }}"
      garage_rear_temp:
        friendly_name: "Garage Rear Temp"
        unit_of_measurement: '°C'
        value_template: >
          {% set room = states.sensor.garage_rear_temp_raw.state %}
          {% set heartbeat = ((as_timestamp(now()) - as_timestamp(states.sensor.garage_safety_heartbeat.last_changed))) <= 15 %}
          {% set ok = false %}
          
          {% set forceSafety = true %}
          
          {% if room|string == '---' or room|string == 'unknown' or room|string == 'unavailable' or room|float == -99.9 or room|float == -1 or forceSafety %}
            {% if heartbeat %}
              {% set room = states.sensor.garage_safety_rear_temperature.state|float %}
              {% set ok = true %}
            {% endif %}
          {% else %}
            {% set ok = true %}
          {% endif %}
          
          {% if ok %}
            {{ room | round(1) }}
          {% else %}
            {{ "Unknown" }}
          {% endif %}
        icon_template: >
          mdi:thermometer
        availability_template: >
          {{ not is_state('binary_sensor.garagerearheater_error', 'unavailable') or not is_state('sensor.garage_rear_temp_raw', 'unavailable') }}
        # attribute_templates:
          # heartbeat: "{{ states.sensor.garage_safety_heartbeat.state }}"
          # f_temp: "{{ states.sensor.garage_safety_front_temperature.state }}"
          # f_relay: "{{ states.binary_sensor.garage_front_safety_active.state == 'on' }}"
          # f_aux: "{{ states.binary_sensor.garagefrontheater_ac.state == 'on' }}"
          # f_coil: "{{ states.switch.garage_front_heater.state == 'on' }}"
          # r_temp: "{{ states.sensor.garage_safety_rear_temperature.state }}"
          # r_aux: "{{ states.binary_sensor.garagerearheater_ac.state == 'on' }}"
          # r_relay: "{{ states.binary_sensor.garage_rear_safety_active.state == 'on' }}"
          # r_coil: "{{ states.switch.garage_rear_heater.state == 'on' }}"
    