####################################################
# SENSORS - POND                                   #
####################################################

######### POND CONTROL - BASIC DATA #########
  - platform: mqtt
    name: "Pond Control Status"
    icon: mdi:fish
    state_topic: "Pond/Control/Json"
    availability:
      - topic: "Pond/Control/LWT"
    qos: 0
    value_template: >
      {% set status = value_json.state %}
      {% if status == "ON" %}
        Running...
      {% else %}
        ERROR
      {% endif %}
    json_attributes_topic: "Pond/Control/Json"
    
  - platform: mqtt
    name: "Pond Control Box Temperature"
    unit_of_measurement: '°C'
    state_topic: "Pond/Control/Json"
    availability:
      - topic: "Pond/Control/LWT"
    value_template: "{{ value_json.temp_in | float | round(1) }}"
    qos: 0
    
  - platform: mqtt
    name: "Pond Control Box Humidity"
    unit_of_measurement: '%'
    icon: mdi:water-percent
    state_topic: "Pond/Control/Json"
    availability:
      - topic: "Pond/Control/LWT"
    value_template: "{{ value_json.hum_in | float | round(1) }}"
    qos: 0
    
  - platform: mqtt
    name: "Pond Control 5V Voltage"
    unit_of_measurement: 'V'
    icon: mdi:flash-outline
    state_topic: "Pond/Control/Json"
    availability:
      - topic: "Pond/Control/LWT"
    qos: 0
    value_template: >
      {% set RV = value_json.Vcc5V | float %}
      
      {% if is_state('binary_sensor.reset_sensors_graphs', 'on') %}
        {{ 0.0 | round(1) }}
      {% else %}
        {{ RV | round(1) }}
      {% endif %}
    
  - platform: mqtt
    name: "Pond Control 12V Voltage"
    unit_of_measurement: 'V'
    icon: mdi:flash-outline
    state_topic: "Pond/Control/Json"
    availability:
      - topic: "Pond/Control/LWT"
    qos: 0
    value_template: >
      {% set RV = value_json.Vcc12V | float %}
      
      {% if is_state('binary_sensor.reset_sensors_graphs', 'on') %}
        {{ 0.0 | round(1) }}
      {% else %}
        {{ RV | round(1) }}
      {% endif %}
    
  - platform: template
    sensors:
      pondpump_status:
        friendly_name: "Pond Pump"
        value_template: >
          {% if is_state('switch.pond_pump', 'on') %}
            {% if is_state('binary_sensor.antifreeze_active', 'on') %}
              Run Low Temp
            {% else %}
              On
            {% endif %}
          {% elif is_state('switch.pond_pump', 'off') %}
            {% if is_state('binary_sensor.pond_level_low', 'off')%}
              Low Level
            {% else %}
              Off
            {% endif %}
          {% else %}
            unknown
          {% endif %}
        availability_template: >
          {{ not is_state('switch.pond_pump', 'unavailable') }}
        icon_template: mdi:pump
        attribute_templates:
          mode: "{{ states('input_select.pondpump_mode') }}"
          schedule: >-
            {% if is_state('input_select.pondpump_mode', '24/7') %}
              ALWAYS ON
            {% elif is_state('input_select.pondpump_mode', 'Spring') %}
              - 8AM to 8PM
              - 0AM to 4AM
            {% elif is_state('input_select.pondpump_mode', 'Summer') %}
              - SUN to THU: 
                - 6AM to 6PM
                - 10PM to 2AM
              - FRI to SAT: 
                - 6AM to 11PM
                - 1AM to 4AM
            {% elif is_state('input_select.pondpump_mode', 'Autumn') %}
              - 2AM to 6AM
              - 9AM to 11AM
              - 2PM to 4PM
              - 9PM to 11PM
              - Outside peak power from HQ
            {% else %}
              ALWAYS OFF
            {% endif %}

    
######### POND CONTROL - SENSORS #########
  - platform: mqtt
    name: "Pond Temperature Raw"
    icon: mdi:oil-temperature
    state_topic: "Home/Control/Sensors/Stts"
    availability:
      - topic: "Home/Control/LWT"
    qos: 0
    unit_of_measurement: '° F'
    value_template: >
      {% set RT = value_json.wtemp|float %}
      {% set TF = ((-0.16883*RT)+162.57203)|float %}
      {{ TF | round(1) }}
      
  - platform: statistics
    name: "Pond Temperature Stats"
    entity_id: sensor.pond_temperature_raw
    max_age:
      minutes: 10
    precision: 1
    
  - platform: template
    sensors:
      pond_temperature:
        friendly_name: "Pond Temperature"
        unit_of_measurement: '° F'
        value_template: >
          {{ states('sensor.pond_temperature_stats') }}
        availability_template: >
          {{ not is_state('sensor.pond_temperature_raw', 'unavailable') }}
        icon_template: mdi:thermometer
        attribute_templates:
          temp_raw: "{{ states('sensor.pond_temperature_raw') }}"
          temp_mean: "{{ state_attr('sensor.pond_temperature_stats', 'mean') }}"
          temp_min: "{{ state_attr('sensor.pond_temperature_stats', 'min_value') }}"
          temp_max: "{{ state_attr('sensor.pond_temperature_stats', 'max_value') }}"

#   - platform: mqtt
#     name: "Pond Pressure"
#     icon: mdi:gauge
#     state_topic: "Pond/Control/Sensors/Stts"
#     availability:
#       - topic: "Pond/Control/LWT"
#     qos: 0
#     unit_of_measurement: 'psi'
#     value_template: >
#       {% set RP = value_json.wpsi|float %}
#       {% set min = 0.5|float %} 
#       {% set span = 4.0|float %}
#       {% set presmax = 60.0|float %}
      
#       {% set ax = (presmax / span)|float %}
#       {% set b = (ax * min * -1.0)|float %}
#       {% set ax = ((ax * 5.0) / 1023.0)|float %}
      
#       {% set PV = ((ax*RP)+b)|float %}
      
#       {% if PV < 0 or PV > 35 %}
#         {{ "unknown" }}
#       {% else %}
#         {{ PV | round(1) }}
#       {% endif %}

  - platform: history_stats
    name: Pond Filler Timer
    entity_id: binary_sensor.pondfiller_status
    state: 'on'
    type: time
    end: '{{ now() }}'
    duration:
      hours: 24
