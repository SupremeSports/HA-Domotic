####################################################
# SENSORS - MQTT - POOL                            #
####################################################

######### POOL CONTROL - BASIC DATA #########
  - name: "Pool Control Status"
    icon: mdi:pool
    state_topic: "Pool/Control/Json"
    availability:
      - topic: "Pool/Control/LWT"
    qos: 0
    value_template: >
      {% set status = value_json.state %}
      {% if status == "ON" %}
        Running...
      {% else %}
        ERROR
      {% endif %}
    json_attributes_topic: "Pool/Control/Json"
    
  - name: "Pool Cabin Temperature"
    unit_of_measurement: '°C'
    state_topic: "Pool/Control/Json"
    availability:
      - topic: "Pool/Control/LWT"
    qos: 0
    value_template: "{{ value_json.temp_out | float | round(1) }}"
    
  - name: "Pool Cabin Humidity"
    unit_of_measurement: '%'
    icon: mdi:water-percent
    state_topic: "Pool/Control/Json"
    availability:
      - topic: "Pool/Control/LWT"
    qos: 0
    value_template: "{{ value_json.hum_out | float | round(1) }}"

  - name: "Pool Control Box Temperature"
    unit_of_measurement: '°C'
    state_topic: "Pool/Control/Json"
    availability:
      - topic: "Pool/Control/LWT"
    qos: 0
    value_template: "{{ value_json.temp_in | float | round(1) }}"
    
  - name: "Pool Control Box Humidity"
    unit_of_measurement: '%'
    icon: mdi:water-percent
    state_topic: "Pool/Control/Json"
    availability:
      - topic: "Pool/Control/LWT"
    qos: 0
    value_template: "{{ value_json.hum_in | float | round(1) }}"
          
  - name: "Pool Control 5V Voltage"
    unit_of_measurement: 'V'
    icon: mdi:flash-outline
    state_topic: "Pool/Control/Json"
    availability:
      - topic: "Pool/Control/LWT"
    qos: 0
    value_template: >
      {% set RV = value_json.Vcc5V | float %}
      
      {% if is_state('binary_sensor.reset_sensors_graphs', 'on') %}
        {{ 0.0 | round(1) }}
      {% else %}
        {{ RV | round(1) }}
      {% endif %}
    
  - name: "Pool Control 12V Voltage"
    unit_of_measurement: 'V'
    icon: mdi:flash-outline
    state_topic: "Pool/Control/Json"
    availability:
      - topic: "Pool/Control/LWT"
    qos: 0
    value_template: >
      {% set RV = value_json.Vcc12V | float %}
      
      {% if is_state('binary_sensor.reset_sensors_graphs', 'on') %}
        {{ 0.0 | round(1) }}
      {% else %}
        {{ RV | round(1) }}
      {% endif %}

######### POOL CONTROL - SENSORS #########
  - name: "Pool Temperature Raw"
    icon: mdi:thermometer
    state_topic: "Pool/Control/Sensors/Stts"
    availability:
      - topic: "Pool/Control/LWT"
    qos: 0
    unit_of_measurement: '° F'
    value_template: >
      {% set prev = states('sensor.pool_temperature_raw')|float(0) %}
      {% set RT = value_json.wtemp|float %}
      {% set reset_graph = is_state('binary_sensor.reset_sensors_graphs', 'on') %}
      
      {% if RT < 50 or RT > 110 %}
        {% if prev != 0 %}
          {% set RT = prev %}
        {% else %}
          {% set RT = 50 %}
        {% endif %}
      {% endif %}
      
      {% if reset_graph %}
        {% set RT = 50 %}
      {% endif %}
      
      {{ RT | round(1) }}
    json_attributes_topic: "Pool/Control/Sensors/Stts"
    json_attributes_template: '{{ {"Sensor read" : value_json.wtemp} | tojson }}'

  - name: "Pool Heater Temp Raw"
    icon: mdi:thermometer
    state_topic: "Pool/Control/Sensors/Stts"
    availability:
      - topic: "Pool/Control/LWT"
    qos: 0
    unit_of_measurement: '° F'
    value_template: >
      {% set prev = states('sensor.pool_heater_temp_raw')|float(0) %}
      {% set RT = value_json.htemp|float %}
      {% set reset_graph = is_state('binary_sensor.reset_sensors_graphs', 'on') %}
      
      {% if RT < 50 or RT > 110 %}
        {% if prev != 0 %}
          {% set RT = prev %}
        {% else %}
          {% set RT = 50 %}
        {% endif %}
      {% endif %}
      
      {% if reset_graph %}
        {% set RT = 50 %}
      {% endif %}
      
      {{ RT | round(1) }}
    json_attributes_topic: "Pool/Control/Sensors/Stts"
    json_attributes_template: '{{ {"Sensor read" : value_json.htemp} | tojson }}'

  - name: "Pool Pump Temp Raw"
    icon: mdi:thermometer
    state_topic: "Pool/Control/Sensors/Stts"
    availability:
      - topic: "Pool/Control/LWT"
    qos: 0
    unit_of_measurement: '°C'
    value_template: >
      {% set RT = value_json.ptemp|float %}
      {% set TC = ((0.08897*RT)-20.94344)+3.6|float %}
      
      {{ TC | round(1) }}
    json_attributes_topic: "Pool/Control/Sensors/Stts"
    json_attributes_template: '{{ {"Sensor read" : value_json.ptemp} | tojson }}'

  - name: "Pool Pressure Raw"
    icon: mdi:gauge
    state_topic: "Pool/Control/Sensors/Stts"
    availability:
      - topic: "Pool/Control/LWT"
    qos: 0
    unit_of_measurement: 'psi'
    value_template: >
      {% set RP = value_json.wpsi|int(0) %}
      {% set min = 0.5 %} 
      {% set span = 4.0 %}
      {% set presmax = 70.0 %}
      
      {% set ax = presmax / span %}
      {% set b = -(ax * min) %}
      {% set ax = (ax * 5.0) / 1023.0 %}
      
      {% if RP < 104 and RP > 15 %}
        {{ 0.0 }}
      {% else %}
        {{ (ax*RP)+b }}
      {% endif %}
    json_attributes_topic: "Pool/Control/Sensors/Stts"
    json_attributes_template: '{{ {"Sensor read" : value_json.wpsi} | tojson }}'

  - name: "Pool PH"
    icon: mdi:flask
    state_topic: "Pool/Control/Sensors/Stts"
    availability:
      - topic: "Pool/Control/LWT"
    qos: 0
    unit_of_measurement: 'pH'
    value_template: >
      {% set prev = states('sensor.pool_ph')|float(0) %}
      {% set PH = value_json.wph|float %}
      {% set ax = 0.01369|float %}
      {% set b = 0.000|float %}
      
      {% set PHO = ((ax*PH)+b)|float %}
      
      {% set PHO = ((range(73, 76)|random)/10)|float %}
      
      {% if PHO <= 4.0 or PHO >= 9.0 %}
        {{ "unknown" }}
      {% elif prev >= 14 %}
        {{ 0.0 | round(1) }}
      {% elif is_state('binary_sensor.reset_sensors_graphs', 'on') and prev != 0 %}
        {{ 14.0 | round(1) }}
      {% else %}
        {{ PHO | round(1) }}
      {% endif %}
    json_attributes_topic: "Pool/Control/Sensors/Stts"
    json_attributes_template: '{{ {"Sensor read" : value_json.wph} | tojson }}'

  - name: "Pool Clock Status"
    icon: mdi:clock
    state_topic: "Pool/Clock/Json"
    availability:
      - topic: "Pool/Clock/LWT"
    qos: 0
    value_template: >
      {% set status = value_json.state %}
      
      {% if is_state('light.pool_clock', 'on') %}
        On
      {% elif status == "ON" %}
        Running...
      {% else %}
        ERROR
      {% endif %}
    json_attributes_topic: "Pool/Clock/Json"

######### POOL TOILET - BASIC DATA #########
  - name: Pool Toilet Control Status
    icon: mdi:server
    state_topic: "ExtToilet/Control/Json"
    availability:
      - topic: "ExtToilet/Control/LWT"
    qos: 0
    value_template: >
      {% set status = value_json.state %}
      {% if status == "ON" %}
        Running...
      {% else %}
        ERROR
      {% endif %}
    json_attributes_topic: "ExtToilet/Control/Json"
    
  - name: Pool Toilet Temperature
    unit_of_measurement: '°C'
    icon: mdi:thermometer
    state_topic: "ExtToilet/Control/Json"
    availability:
      - topic: "ExtToilet/Control/LWT"
    value_template: "{{ value_json.temp_out }}"
    qos: 0
    
  - name: Pool Toilet Humidity
    icon: mdi:water-percent
    unit_of_measurement: '%'
    state_topic: "ExtToilet/Control/Json"
    availability:
      - topic: "ExtToilet/Control/LWT"
    value_template: "{{ value_json.hum_out }}"
    qos: 0
    
  - name: Pool Toilet 3V3 Voltage
    unit_of_measurement: 'V'
    icon: mdi:flash-outline
    state_topic: "ExtToilet/Control/Json"
    availability:
      - topic: "ExtToilet/Control/LWT"
    qos: 0
    value_template: >
      {% set RV = value_json.Vcc3V3 | float %}
      
      {% if is_state('binary_sensor.reset_sensors_graphs', 'on') %}
        {{ 0.0 | round(1) }}
      {% else %}
        {{ RV | round(1) }}
      {% endif %}
