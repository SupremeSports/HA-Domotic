###################################################
# AUTOMATIONS - OUTDOOR & YARD                    #
###################################################

  - alias: House Front Door Locked Time
    mode: restart
    trigger:
      - platform: time_pattern
        seconds: '/5'
    condition:
      - alias: "House front door locked or unavailable"
        condition: template
        value_template: "{{ states('lock.house_fd_lock') not in ('unavailable','locked') }}"
    action:
      - service: input_datetime.set_datetime
        entity_id: input_datetime.house_front_door
        data:
          timestamp: "{{ now().timestamp() }}"
          
  - alias: Garage Front Door Locked Time
    mode: restart
    trigger:
      - platform: time_pattern
        seconds: '/5'
    condition:
      - alias: "Garage front door locked or unavailable"
        condition: template
        value_template: "{{ states('lock.garage_fd_lock') not in ('unavailable','locked') }}"
    action:
      - service: input_datetime.set_datetime
        entity_id: input_datetime.garage_front_door
        data:
          timestamp: "{{ now().timestamp() }}"
          
  - alias: Lamp Post Control
    mode: restart
    trigger:
      - platform: time_pattern
        seconds: '/5'
      - platform: state
        entity_id: input_select.lamppost_mode
    action:
      data:
        entity_id: "lamp_post"
      service_template: >
        {% set time = now().hour %}
        {% set GFD = as_timestamp(now()) - as_timestamp(states('input_datetime.garage_front_door'), as_timestamp(now())) > 300 %}
        {% set HFD = as_timestamp(now()) - as_timestamp(states('input_datetime.house_front_door'), as_timestamp(now())) > 300 %}
        {% set SUN = is_state('sun.sun', 'below_horizon') %}
        
        {% set output = false %}
        
        {% if is_state('input_select.lamppost_mode', '24/7') %}
          {% set output = true %}
        {% elif is_state('input_select.lamppost_mode', 'Sunset to 23h')  %}
          {% set output = (SUN and time>12 and time<23) or (SUN and not (GFD and HFD)) %}
        {% elif is_state('input_select.lamppost_mode', 'Sunset to Sunrise') %}
          {% set output = SUN %}
        {% endif %}
        
        {% if output %}
          script.switch_turn_on
        {% else %}
          script.switch_turn_off
        {% endif %}
      
  - alias: Power Outlet Control
    mode: restart
    trigger:
      - platform: time_pattern
        seconds: '/5'
      - platform: state
        entity_id: input_select.poweroutlet_mode
    action:
      data:
        entity_id: "power_outlet"
      service_template: >
        {% set time = state_attr('sensor.times','hour')|int(0) %}
        {% set day = state_attr('sensor.dates','day')|int(0) %}
        {% set month = state_attr('sensor.dates','month')|int(0) %}
        {% set date = now().strftime("%m-%d") %}
        {% set sunset_hour = as_timestamp(states.sun.sun.attributes.next_setting)|int(0) %}
        {% set sunset_early = ((sunset_hour - 60*60) | timestamp_custom('%H:%M')) < (as_timestamp(now()) | timestamp_custom('%H:%M')) %}
        {% set output = false %}
        
        {% if is_state('input_select.poweroutlet_mode', '24/7') %}
          {% set output = true %}
        {% elif is_state('input_select.poweroutlet_mode', 'Fountain') %}
          {% if is_state('sun.sun', 'above_horizon') or (time > 12 and time < 22) %}
            {% set output = true %}
          {% elif is_state('binary_sensor.antifreeze_active', 'on') %}
            {% set output = true %}
          {% endif %}
        {% elif is_state('input_select.poweroutlet_mode', 'Halloween Decorations') %}
          {% if month == 10 %}
            {% if day == 31 and time >= 7 %}
              {% set output = true %}
            {% elif day >= 15 and time >= 7 and time < 23 %}
              {% set output = true %}
            {% elif (sunset_early or time >= 16) and time < 23 %}
              {% set output = true %}
            {% endif %}
          {% endif %}
        {% elif is_state('input_select.poweroutlet_mode', 'Christmas Decorations') %}
          {% if month < 11 or month > 1 %}
            {% set output = false %}
          {% elif month == 11 and day < 12 %}
            {% set output = false %}
          {% elif month == 1 and day > 7 %}
            {% set output = false %}
          {% elif (sunset_early or time >= 16) and time < 23 %}
            {% set output = true %}
          {% elif (date == "12-24" and time >= 7) or date == "12-25" %}
            {% set output = true %}
          {% endif %}
        {% endif %}
        
        {% if output %}
          script.switch_turn_on
        {% else %}
          script.switch_turn_off
        {% endif %}
        
  - alias: Front Door Light Control
    mode: restart
    trigger:
      - platform: time_pattern
        seconds: '/5'
      - platform: state
        entity_id: input_select.frontdoorlight_mode
    condition:
      - alias: "Light selector is not in 'switch mode'"
        condition: template
        value_template: "{{ not is_state('input_select.frontdoorlight_mode','Switch Mode') }}"
    action:
      data:
        entity_id: "front_door_light"
      service_template: >
        {% set time = now().hour %}
        {% set SUN = is_state('sun.sun', 'below_horizon') %}
        {% set GFD = as_timestamp(now()) - as_timestamp(states('input_datetime.garage_front_door')) > 300 %}
        {% set HFD = as_timestamp(now()) - as_timestamp(states('input_datetime.house_front_door')) > 300 %}
        {% set GFD = true %}
        {% set HFD = true %}
        {% set output = false %}
          
        {% if is_state('input_select.frontdoorlight_mode', '24/7') %}
          {% set output = true %}
        {% elif is_state('input_select.frontdoorlight_mode', 'Sunset to 23h')  %}
          {% set output = (SUN and time>12 and time<23) or (SUN and not (GFD and HFD)) %}
        {% elif is_state('input_select.frontdoorlight_mode', 'Sunset to Sunrise') %}
          {% set output = SUN %}
        {% endif %}
        
        {% if output %}
          script.switch_turn_on
        {% else %}
          script.switch_turn_off
        {% endif %}
        
  - alias: Garage Front Light Control
    mode: restart
    trigger:
      - platform: time_pattern
        seconds: '/5'
      - platform: state
        entity_id: input_select.garagefrontlight_mode
    action:
      data:
        entity_id: "garage_front_light"
      service_template: >
        {% set time = now().hour %}
        {% set SUN = is_state('sun.sun', 'below_horizon') %}
        {% set GFD = as_timestamp(now()) - as_timestamp(states('input_datetime.garage_front_door')) > 300 %}
        {% set GFP = is_state('input_select.garagefrontpower_mode', 'Christmas Decorations') and is_state('switch.garage_front_power', 'on') and GFD %}
        {% set HFL = is_state('binary_sensor.frontdoorlight_status','on') %}
        
        {% set output = false %}
        
        {% if not is_state('input_select.garagefrontlight_mode', 'Force Off') and HFL %}
          {% set output = true %}
        {% elif is_state('input_select.garagefrontlight_mode', '24/7') %}
          {% set output = true %}
        {% elif is_state('input_select.garagefrontlight_mode', 'Sunset to 23h') and not GFP %}
          {% set output = SUN and time > 12 and time < 23 %}
        {% elif is_state('input_select.garagefrontlight_mode', 'Sunset to Sunrise') and not GFP %}
          {% set output = SUN %}
        {% endif %}
        
        {% if output %}
          script.switch_turn_on
        {% else %}
          script.switch_turn_off
        {% endif %}
        
  - alias: Garage Front Power Control
    mode: restart
    trigger:
      - platform: time_pattern
        seconds: '/5'
      - platform: state
        entity_id: input_select.garagefrontpower_mode
    action:
      data:
        entity_id: "garage_front_power"
      service_template: >
        {% set time = now().hour %}
        {% set date = now().strftime("%m-%d") %}
        {% set day = state_attr('sensor.dates','day')|int(0) %}
        {% set month = state_attr('sensor.dates','month')|int(0) %}
        {% set sunset_hour = as_timestamp(states.sun.sun.attributes.next_setting)|int(0) %}
        {% set sunset_hour = sunset_hour - 60*60 %}
        {% set sunset_early = (sunset_hour | timestamp_custom('%H:%M')) < (as_timestamp(now()) | timestamp_custom('%H:%M')) %}
        
        {% set output = false %}
        
        {% if is_state('input_select.garagefrontpower_mode', '24/7') %}
          {% set output = true %}
        {% elif is_state('input_select.garagefrontpower_mode', 'Sunset to 23h') %}
          {% set output = is_state('sun.sun', 'below_horizon') and time > 12 and time < 23 %}
        {% elif is_state('input_select.garagefrontpower_mode', 'Sunset to Sunrise') %}
          {% set output = is_state('sun.sun', 'below_horizon') %}
        {% elif is_state('input_select.garagefrontpower_mode', 'Christmas Decorations') %}
          {% if month < 11 or month > 1 %}
            {% set output = false %}
          {% elif month == 11 and day < 12 %}
            {% set output = false %}
          {% elif month == 1 and day > 7 %}
            {% set output = false %}
          {% elif (sunset_early or time >= 16) and time < 23 %}
            {% set output = true %}
          {% elif (date == "12-24" and time >= 7) or date == "12-25" %}
            {% set output = true %}
          {% endif %}
        {% endif %}
        
        {% if output %}
          script.switch_turn_on
        {% else %}
          script.switch_turn_off
        {% endif %}

  - alias: Frontyard Irrigation Control
    mode: restart
    trigger:
      - platform: time_pattern
        seconds: '/5'
      - platform: state
        entity_id: input_select.frontyardirrigation_mode
      - platform: state
        entity_id: input_datetime.frontyardirrigation_start
      - platform: state
        entity_id: input_datetime.frontyardirrigation_stop
    action:
      data:
        entity_id: "frontyard_irrigation"
      service_template: >
        {% set output = false %}
        
        {% if is_state('input_select.frontyardirrigation_mode', '24/7') %}
          {% set output = true %}
        {% elif is_state('input_select.frontyardirrigation_mode', 'Auto') %}
          {% set start = states('sensor.time') >= state_attr('input_datetime.frontyardirrigation_start', 'timestamp') | int(0) | timestamp_custom('%H:%M', False) %}
          {% set stop = states('sensor.time') < state_attr('input_datetime.frontyardirrigation_stop', 'timestamp') | int(0) | timestamp_custom('%H:%M', False) %}
        
          {% if start and stop %}
            {% set output = true %}
          {% endif %}
        {% endif %}
        
        {% if output %}
          script.switch_turn_on
        {% else %}
          script.switch_turn_off
        {% endif %}
        
  - alias: Garden Irrigation Control
    mode: restart
    trigger:
      - platform: time_pattern
        seconds: '/5'
      - platform: state
        entity_id: input_select.gardenirrigation_mode
      - platform: state
        entity_id: input_datetime.gardenirrigation_start
      - platform: state
        entity_id: input_datetime.gardenirrigation_stop
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: 'script.gardenirrigation_start30m'
          state: 'off'
        - condition: state
          entity_id: 'script.gardenirrigation_start1h'
          state: 'off'
    action:
      data:
        entity_id: "garden_irrigation"
      service_template: >
        {% set output = false %}
        
        {% if is_state('input_select.gardenirrigation_mode', '24/7') %}
          {% set output = true %}
        {% elif is_state('input_select.gardenirrigation_mode', 'Auto') %}
          {% set start = states('sensor.time') >= state_attr('input_datetime.gardenirrigation_start', 'timestamp') | int(0) | timestamp_custom('%H:%M', False) %}
          {% set stop = states('sensor.time') < state_attr('input_datetime.gardenirrigation_stop', 'timestamp') | int(0) | timestamp_custom('%H:%M', False) %}
          
          {% if start and stop %}
            {% set output = true %}
          {% elif is_state('input_select.gardenirrigationaux_mode', 'Auto') %}
            {% set startaux = states('sensor.time') >= state_attr('input_datetime.gardenirrigationaux_start', 'timestamp') | int(0) | timestamp_custom('%H:%M', False) %}
            {% set stopaux = states('sensor.time') < state_attr('input_datetime.gardenirrigationaux_stop', 'timestamp') | int(0) | timestamp_custom('%H:%M', False) %}
            {% if startaux and stopaux %}
              {% set output = true %}
            {% endif %}
          {% endif %}
        {% endif %}
        
        {% if output %}
          script.switch_turn_on
        {% else %}
          script.switch_turn_off
        {% endif %}
        
  - alias: Garden Irrigation Force Start
    mode: restart
    trigger:
      - platform: state
        entity_id: input_boolean.gardenirrigation_start1h
        to: 'on'
      - platform: state
        entity_id: input_boolean.gardenirrigation_start30m
        to: 'on'
      - platform: state
        entity_id: input_boolean.gardenirrigation_cancel
        to: 'on'
    action:
      - service_template: script.{% if '30m' in trigger.to_state.entity_id %}gardenirrigation_start30m{% elif '1h' in trigger.to_state.entity_id %}gardenirrigation_start1h{% else %}gardenirrigation_cancel{% endif %}
        
  - alias: Shed Inside Light
    mode: restart
    trigger:
      - platform: time_pattern
        seconds: '/5'
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: sensor.shed_fd_status
          state: 'Ok'
          for:
            minutes: 5
        - condition: state
          entity_id: 'switch.shed_inside_light'
          state: 'on'
    action:
      - service: switch.turn_off
        entity_id: switch.shed_inside_light
        